version: 2.1

orbs:
  hmpps: ministryofjustice/hmpps@7
  slack: circleci/slack@4.12.1
  node: circleci/node@4.5.2

parameters:
  alerts-slack-channel:
    type: string
    # Normally team specific alert channel e.g. hmpps_tech_alerts, syscon-alerts, dps_sed_alerts
    # This is to avoid a general alert dumping ground that no-one then monitors
    default: accredited-programmes-events

  releases-slack-channel:
    type: string
    # Normally dps-releases for most teams / projects
    default: accredited-programmes-events

  node-version:
    type: string
    default: 20.9-browsers

jobs:
  build:
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - run:
          name: Update npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Install Dependencies
          command: npm ci --no-audit
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
            - ~/.cache
      - run:
          command: |
            npm run build
            DATE=$(date '+%Y-%m-%d')
            export BUILD_NUMBER=${DATE}.${CIRCLE_BUILD_NUM}
            export GIT_REF="$CIRCLE_SHA1"
            npm run record-build-info
      - run: # Run linter after build because the integration test code depend on compiled typescript...
          name: Linter check
          command: npm run lint:ci
      - run: npm run typecheck
      - persist_to_workspace:
          root: .
          paths:
            - node_modules
            - build-info.json
            - build
            - dist
            - .cache/Cypress

  unit_test:
    environment:
      PACT_BROKER_BASE_URL: 'https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk'
    executor:
      name: hmpps/node
      tag: << pipeline.parameters.node-version >>
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: unit tests
          command: npm run test:unit:ci
      - store_test_results:
          path: test_results/unit/xml
      - store_artifacts:
          path: test_results/unit
      - store_artifacts:
          path: test_results/unit/xml
      - store_artifacts:
          path: pact/pacts
      - run:
          name: Upload pact files to broker
          command: |
            npx pact-broker publish pact/pacts \
              --broker-base-url $PACT_BROKER_BASE_URL \
              --consumer-app-version $CIRCLE_SHA1 --tag $CIRCLE_BRANCH \
              -u $PACT_BROKER_USERNAME -p $PACT_BROKER_PASSWORD

  integration_test:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: '6.2'
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9199
          background: true
      - run:
          name: Compile sass
          command: npm run compile-sass
      - run:
          name: Run the node app
          command: npm run test:integration:ci:server
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: integration tests
          command: npm run test:integration:cli:run
      - store_test_results:
          path: test_results/integration
      - store_artifacts:
          path: test_results/integration
      - store_artifacts:
          path: test_results/integration/downloads
      - store_artifacts:
          path: test_results/integration/screenshots
      - store_artifacts:
          path: test_results/integration/videos
      - store_artifacts:
          path: test_results/integration/xml

  integration_test_refer_disabled:
    executor:
      name: hmpps/node_redis
      node_tag: << pipeline.parameters.node-version >>
      redis_tag: '6.2'
    steps:
      - checkout
      - attach_workspace:
          at: ~/app
      - run:
          name: Install missing OS dependency
          command: sudo apt-get install libxss1
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: Get wiremock
          command: curl -o wiremock.jar https://repo1.maven.org/maven2/com/github/tomakehurst/wiremock-standalone/2.27.1/wiremock-standalone-2.27.1.jar
      - run:
          name: Run wiremock
          command: java -jar wiremock.jar --port 9199
          background: true
      - run:
          name: Compile sass
          command: npm run compile-sass
      - run:
          name: Run the node app
          command: npm run test:integration:refer-disabled:ci:server
          background: true
      - run:
          name: Wait for node app to start
          command: sleep 5
      - run:
          name: integration tests
          command: npm run test:integration:refer-disabled:cli:run
      - store_test_results:
          path: test_results/integration/refer_disabled
      - store_artifacts:
          path: test_results/integration/refer_disabled
      - store_artifacts:
          path: test_results/integration/refer_disabled/downloads
      - store_artifacts:
          path: test_results/integration/refer_disabled/screenshots
      - store_artifacts:
          path: test_results/integration/refer_disabled/videos
      - store_artifacts:
          path: test_results/integration/refer_disabled/xml

  tag_pact_version:
    environment:
      PACT_BROKER_BASE_URL: 'https://pact-broker-prod.apps.live-1.cloud-platform.service.justice.gov.uk'
    executor:
      name: hmpps/node
      tag: 16.17-browsers
    parameters:
      tag:
        type: string
    steps:
      - run:
          name: Tag contract version with deployment
          command: |
            npx --package='@pact-foundation/pact-node' pact-broker create-version-tag \
              --pacticipant="Accredited Programmes UI" --version="$CIRCLE_SHA1" --tag="<< parameters.tag >>" \
              --broker-base-url="$PACT_BROKER_BASE_URL" --broker-username="$PACT_BROKER_USERNAME" --broker-password="$PACT_BROKER_PASSWORD"

  end_to_end_test:
    docker:
      - image: mcr.microsoft.com/playwright:v1.39.0-focal
    circleci_ip_ranges: true # opt-in to jobs running on a restricted set of IPs
    steps:
      - run:
          name: Clone E2E repo
          command: |
            git clone https://github.com/ministryofjustice/hmpps-accredited-programmes-e2e.git .
      - run:
          name: Update npm
          command: 'npm install -g npm@latest'
      - node/install-packages
      - run:
          name: E2E Check
          command: |
            npx playwright test
      - store_artifacts:
          path: playwright-report

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - build:
          filters:
            tags:
              ignore: /.*/
      - unit_test:
          requires:
            - build
          context: hmpps-common-vars
      - integration_test:
          requires:
            - build
      - integration_test_refer_disabled:
          requires:
            - build
      - hmpps/helm_lint:
          name: helm_lint
      - hmpps/build_docker:
          name: build_docker
          filters:
            branches:
              only:
                - main

      - hmpps/deploy_env:
          name: deploy_dev
          env: 'dev'
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - helm_lint
            - unit_test
            - integration_test
            - integration_test_refer_disabled
            - build_docker
      - end_to_end_test:
          context: hmpps-common-vars
          filters:
            branches:
              only:
                - main
          requires:
            - deploy_dev
      - tag_pact_version:
          name: 'tag_pact_version_dev'
          tag: 'deployed:dev'
          requires: [deploy_dev]
          context: [hmpps-common-vars]

      - request-preprod-approval:
          type: approval
          requires:
            - deploy_dev
            - end_to_end_test
      - hmpps/deploy_env:
          name: deploy_preprod
          env: 'preprod'
          context:
            - hmpps-common-vars
            - hmpps-accredited-programmes-ui-preprod
          requires:
            - request-preprod-approval
      - tag_pact_version:
          name: 'tag_pact_version_preprod'
          tag: 'deployed:preprod'
          requires: [deploy_preprod]
          context: [hmpps-common-vars]

      - request-prod-approval:
          type: approval
          requires:
            - deploy_preprod
      - hmpps/deploy_env:
          name: deploy_prod
          env: 'prod'
          slack_notification: true
          slack_channel_name: << pipeline.parameters.releases-slack-channel >>
          context:
            - hmpps-common-vars
            - hmpps-accredited-programmes-ui-prod
          requires:
            - request-prod-approval
      - tag_pact_version:
          name: 'tag_pact_version_prod'
          tag: 'deployed:prod'
          requires: [deploy_prod]
          context: [hmpps-common-vars]

  security:
    triggers:
      - schedule:
          cron: '58 6 * * 1-5'
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/npm_outdated:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/npm_security_audit:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/trivy_latest_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - hmpps-common-vars
      - hmpps/veracode_pipeline_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
  security-weekly:
    triggers:
      - schedule:
          cron: '19 6 * * 1'
          filters:
            branches:
              only:
                - main
    jobs:
      - hmpps/veracode_policy_scan:
          slack_channel: << pipeline.parameters.alerts-slack-channel >>
          context:
            - veracode-credentials
            - hmpps-common-vars
